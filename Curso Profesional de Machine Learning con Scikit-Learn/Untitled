{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Untitled","provenance":[],"authorship_tag":"ABX9TyPNs8IQbMDmzhfL9ny7NReP"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"5ENVawgK4YKb","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"error","timestamp":1592524914491,"user_tz":300,"elapsed":939,"user":{"displayName":"DAVIES ANDERS AGUIRRE BLAS","photoUrl":"","userId":"18286850109652277189"}},"outputId":"9c3ed8c3-717b-40e8-8119-5374d5453ffe"},"source":["kpca= KernelPCA(n_components= 4, kernel= 'poly') #El parámetro kernel es el parámetro que le diferencia a este algoritmo de sus hermanos PCA\n","                                                # 'lineal' sería lo mismo que hacer un PCA normal, 'poly' es un kernel polynomial  y 'rbf' es para emplear un \"RBF\"\n","#Realizamos el respectivo ajuste de los datos\n","kpca.fit(X_train)\n","    "],"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-860654eac95f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mkpca\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mKernelPCA\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn_components\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkernel\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0;34m'poly'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m#El parámetro kernel es el parámetro que le diferencia a este algoritmo de sus hermanos PCA\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m                                                 \u001b[0;31m# 'lineal' sería lo mismo que hacer un PCA normal, 'poly' es un kernel polynomial  y 'rbf' es para emplear un \"RBF\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m#Realizamos el respectivo ajuste de los datos\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mkpca\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'KernelPCA' is not defined"]}]}]}